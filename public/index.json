[{"authors":["admin"],"categories":null,"content":"Elliot Meador is a computational social scientist and data scientist working as a research fellow within the Rural Policy Centre at SRUC in Edinburgh, UK. His work focuses on mapping rural resilience in Scotland and understanding how policy impacts community resilience. Elliot\u0026rsquo;s research also looks at how information on sustainable agriculture practices is shared between farmers and how this influences behaviour change related to sustainable development. Elliot\u0026rsquo;s research spans North America, Europe and Africa.\n","date":1582329600,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1582329600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"Elliot Meador is a computational social scientist and data scientist working as a research fellow within the Rural Policy Centre at SRUC in Edinburgh, UK. His work focuses on mapping rural resilience in Scotland and understanding how policy impacts community resilience. Elliot\u0026rsquo;s research also looks at how information on sustainable agriculture practices is shared between farmers and how this influences behaviour change related to sustainable development. Elliot\u0026rsquo;s research spans North America, Europe and Africa.","tags":null,"title":"Elliot Meador PhD","type":"authors"},{"authors":null,"categories":null,"content":"Flexibility This feature can be used for publishing content such as:\n Online courses Project or software documentation Tutorials  The courses folder may be renamed. For example, we can rename it to docs for software/project documentation or tutorials for creating an online course.\nDelete tutorials To remove these pages, delete the courses folder and see below to delete the associated menu link.\nUpdate site menu After renaming or deleting the courses folder, you may wish to update any [[main]] menu links to it by editing your menu configuration at config/_default/menus.toml.\nFor example, if you delete this folder, you can remove the following from your menu configuration:\n[[main]] name = \u0026quot;Courses\u0026quot; url = \u0026quot;courses/\u0026quot; weight = 50  Or, if you are creating a software documentation site, you can rename the courses folder to docs and update the associated Courses menu configuration to:\n[[main]] name = \u0026quot;Docs\u0026quot; url = \u0026quot;docs/\u0026quot; weight = 50  Update the docs menu If you use the docs layout, note that the name of the menu in the front matter should be in the form [menu.X] where X is the folder name. Hence, if you rename the courses/example/ folder, you should also rename the menu definitions in the front matter of files within courses/example/ from [menu.example] to [menu.\u0026lt;NewFolderName\u0026gt;].\n","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"59c3ce8e202293146a8a934d37a4070b","permalink":"/courses/example/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/courses/example/","section":"courses","summary":"Learn how to use Academic's docs layout for publishing online courses, software documentation, and tutorials.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"74533bae41439377bd30f645c4677a27","permalink":"/courses/example/example1/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example1/","section":"courses","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim.","tags":null,"title":"Example Page 1","type":"docs"},{"authors":null,"categories":null,"content":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 4 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"1c2b5a11257c768c90d5050637d77d6a","permalink":"/courses/example/example2/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example2/","section":"courses","summary":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus.","tags":null,"title":"Example Page 2","type":"docs"},{"authors":[],"categories":["R","SNA"],"content":" Introduction I’ve been doing some work lately on social networks that exist between organisations or institutions. This is nice as it builds on some of my dissertation work, and I generally find it quite interesting. Networks that form between organisations are often quite powerful, in that they can illustrate where strong areas of like-minded work exist or where new connections might be useful in strengthing one organisation’s influence.\nWhy like me? Organisational ties – like personal relationships in business – can be extremely valuable to a firm’s bottom line. These ties are often leveraged and manoeuvred to produce some sought-after result. A few examples might be:\n Do I know anyone at Organisation X who might have more information about some big grant schemed about to be launched?\n  Who in my inner circle has ties to a business who might provide some venture capital for an idea I have?\n The notion of leverage’s one’s networks is nothing new. It’s known as social capital theory in sociology and is a well-known tactic taught in business schools. Its applications are too big to get into in this blog post. I’d suggest taking a look at this Forbes article for a bit more information on why this might benefit you. If you’re interested in leveraging one’s ties for their benefit from an academic perspective you can read some of my published articles or read works by James Coleman, Pierre Bourdeau or Robert Putnam from the 1980s and 1990s.\n  The nitty-gritty Some data Now that we know it’s a worthwhile venture to leverage one’ network ties, let’s take a closer look at how we might approach this from a data perspective. We’ll use a portion of the mock data we created in an earlier blog found here. The database created from the code in that blog post is called create_sna_data, and we’ll be using it for the rest of this post.\n Finding what we’re looking for We’re going to be preforming shortest-distance analysis. Shortest distance analysis, also known as shortest paths, is a common algorithm used anytime objects are found within a network. It’s common in logistics work, especially regarding travel along a road or rail network. GIS analysis uses this approach as well. A great example is the Scottish Index of Multiple Deprivation’s use of shortest-distance analysis in looking at access as a form of deprivation in Scotland. Take a look at the SIMD documentation here for an overview.\nAccording to igraph’s documentation:\n … [shortest distance] calculates the length of all the shortest paths from or to the vertices in the network. [It] calculates one shortest path (the path itself, and not just its length) from or to the given vertex.\n Let’s use the shortest distance function from tidygraph (which implements igraph’s shortest.paths functionality) using a straight forward approach.\nBelow let’s look at the shortest distance between two nodes.\nFirst, we’ll create a base layout from which to filter for sub-graphs when we want to show a path between two nodes. Then, we’ll plot the graph using ggraph. ggraph likes the layout matrices to be in tibble form with the column names x and y.  # create a filtering column called id. create_sna_data \u0026lt;- create_sna_data %\u0026gt;% mutate(id. = row_number()) # use the layout with stress algorythm to create a layout layout_df \u0026lt;- create_sna_data %\u0026gt;% layout_with_stress() %\u0026gt;% as_tibble() %\u0026gt;% set_names(c(\u0026#39;x\u0026#39;, \u0026#39;y\u0026#39;) ) ## And now the plot create_sna_data %\u0026gt;% ggraph(layout = layout_df)+ # our layout algorythm from above geom_edge_fan(start_cap = circle(2, \u0026#39;mm\u0026#39;), end_cap = circle(2, \u0026#39;mm\u0026#39;))+ geom_node_point(size = 4)+ geom_node_text(aes(label = id.), size = 2.25, color = \u0026#39;white\u0026#39;)+ labs(title = \u0026#39;Full network\u0026#39;) Now, we’ll find the shortest path between two nodes: 75 and 4. We’ll plot the shortest path as a network and lay it on top of the network above so we can visualise the path within the network. To do this, we’ll calculate the layout tibble first and filter it for the shortest paths network using the layout_with_stressfunction from the graphlayouts package. Note that we’ll need to pull our nodes that sit along the shortest path from our layout data frame. We’ll use the slice function in dplyr for this.\ncreate_sna_data_4_75 \u0026lt;- create_sna_data %\u0026gt;% morph(to_shortest_path, 75, 4) %\u0026gt;% mutate(selected_node = T) %\u0026gt;% activate(edges) %\u0026gt;% mutate(selected_edge = T) %\u0026gt;% activate(nodes) %\u0026gt;% unmorph() colors_v \u0026lt;- c(\u0026#39;tomato\u0026#39;, \u0026#39;skyblue\u0026#39;) names(colors_v) \u0026lt;- c(\u0026#39;TRUE\u0026#39;, \u0026#39;Other\u0026#39;) create_sna_data_4_75 %\u0026gt;% mutate(selected_node = ifelse( is.na(selected_node), \u0026#39;Other\u0026#39;, selected_node )) %\u0026gt;% activate(edges) %\u0026gt;% mutate(selected_edge = ifelse( is.na(selected_edge), \u0026#39;Other\u0026#39;, selected_edge )) %\u0026gt;% ggraph(layout = layout_df)+ geom_edge_fan(aes(color = selected_edge), start_cap = circle(2, \u0026#39;mm\u0026#39;), end_cap = circle(2, \u0026#39;mm\u0026#39;))+ geom_node_point(aes(color = selected_node), size = 4)+ geom_node_text(aes(label = id.), size = 2.5, color = \u0026#39;white\u0026#39;)+ scale_color_manual(values = colors_v, name = \u0026#39;Nodes\u0026#39;, label = c(\u0026#39;Other\u0026#39;, \u0026#39;Shortest path\u0026#39;))+ scale_edge_color_manual(values = colors_v, name = \u0026#39;Edges\u0026#39;, label = c(\u0026#39;Other\u0026#39;, \u0026#39;Shortest path\u0026#39;))+ labs(title = \u0026#39;Shortest path between nodes 75 and 4\u0026#39;)  Leveraging networks The notion of leveraging networks comes from the reality that not every node in a network is available to us to draw resources from. For the most part, a node has a useable relationship with only those nodes in its inner circle – or its one-degree neighbourhood. Now, this isn’t always the case, but as a very general rule with SNA, the further one node is from another, the less influence they have on one another. SNA can help identify which people could put you in touch with some other person based on a set of pre-defined criteria. SNA helps answer the question:\n Do I know a dude who knows a dude?\n The goal So let’s suppose our goal is to utilise our social network to find a potential partner to work on a grant with us. The funder of our grant scheme has a real soft spot for loners – i.e. one-degree nodes; maybe because before our funder made it big they used to be a one-degree node themselves. Who knows! Below we see our same network with the one-degree nodes highlighted. We’ll pretend that we are Le, Brianna (# 87), one of the most well-connected persons in the network (with a betweenness score of 3,088).\nWe know that we want to partner with a node that has only-degree. We will want to approach as many one-degree nodes as possible, as some will turn us down or might not be available to partner on the grant application.\nWe also know that we get along with some people better than others and that we’ll have to depend on our relationships to help leverage them. It may sound crazy, but Le, Brianna (ourself) gets along really well with people who buy all their food from farmers markets. So, we’ll use this to our advantage by trying to find as many shortest paths to single-degree nodes that are filled with nodes that buy all their meals at farmers markets. We’ll do this with iterative programming otherwise known as looping. Therefore, our approach is:\nAssign a numeric scoring value for the column buy_farm_mark, with more meals receiving a higher score; geodesic distance will also be factored into the score, with nodes further away receiving a higher score. Identify all shortest paths between Le, Brianna and all one-degree nodes in the network. Create a scaled score for each path that we can use to decide on who to contact first for partnering on the grant application.  Step 1 # Those who buy every meal from the farmers # market get a score of 5, 3 for most meals # and 0 for hardly any meals. We\u0026#39;ll create # a tibble and merge it with data frame. farm_buy_n \u0026lt;- tibble(buy_farm_mark = c(\u0026#39;Every meal\u0026#39;, \u0026#39;Most meals\u0026#39;, \u0026#39;Hardly any meals\u0026#39;), farm_mark_score = c(5, 3, 0)) create_sna_data_updated \u0026lt;- create_sna_data_updated %\u0026gt;% left_join(farm_buy_n, by = \u0026quot;buy_farm_mark\u0026quot;)  Step 2 # get all one-degree node one_degree_names \u0026lt;- names( which( degree( create_sna_data_updated) == 1)) # and pull out their names. one_degree_ids \u0026lt;- which( V(create_sna_data_updated)$name %in% one_degree_names) # Find the max betweeness for the starting node. max_degree \u0026lt;- which( betweenness( create_sna_data_updated) == max( betweenness( create_sna_data_updated)))[1] ## The loop!! ## all_shortest_one_degre_paths_ls \u0026lt;- map(one_degree_ids, # our one-degree nodes are here function(x){ create_sna_data_updated %\u0026gt;% morph(to_shortest_path, max_degree, x) %\u0026gt;% mutate(selected_node = TRUE) %\u0026gt;% activate(edges) %\u0026gt;% mutate(selected_edge = TRUE) %\u0026gt;% activate(nodes) %\u0026gt;% unmorph() })  Step 3 # Create the scores and flatten the list # into a numeric vector that we can use to # subset by. all_scores \u0026lt;- all_shortest_one_degre_paths_ls %\u0026gt;% map(function(x){ x %\u0026gt;% filter(selected_node) %\u0026gt;% as_tibble() %\u0026gt;% summarise(total_farm = sum(farm_mark_score), n = n(), total_score = total_farm / n) %\u0026gt;% pull(total_score) }) %\u0026gt;% flatten_dbl() highest_score \u0026lt;- which(all_scores == max(all_scores))[[1]] And now let’s take a look at the final results.\n  Results Let’s plot our final results using the code below.\ncolor_v_iii \u0026lt;- c(\u0026#39;#084081\u0026#39;, \u0026#39;#A8DDB5\u0026#39;) names(color_v_iii) \u0026lt;- c(T, \u0026#39;Other\u0026#39;) highest_score_g \u0026lt;- all_shortest_one_degre_paths_ls[[ highest_score]] %\u0026gt;% mutate(selected_node = ifelse(is.na(selected_node), \u0026#39;Other\u0026#39;, selected_node)) %\u0026gt;% activate(edges) %\u0026gt;% mutate(selected_edge = ifelse(is.na(selected_edge), \u0026#39;Other\u0026#39;, selected_edge)) highest_score_g %\u0026gt;% activate(nodes) %\u0026gt;% mutate(buy_farm_mark = factor(buy_farm_mark, levels = c(\u0026#39;Every meal\u0026#39;, \u0026#39;Most meals\u0026#39;, \u0026#39;Hardly any meals\u0026#39;))) %\u0026gt;% ggraph(layout = layout_df)+ geom_edge_fan(aes(color = selected_edge))+ geom_node_point(aes(color = selected_node, shape = buy_farm_mark), size = 3)+ scale_color_manual(values = color_v_iii, \u0026#39;Node path\u0026#39;, labels = c(\u0026#39;Other\u0026#39;, \u0026#39;Highest score\u0026#39; ))+ scale_edge_color_manual(values = color_v_iii, \u0026#39;Edge path\u0026#39;, labels = c(\u0026#39;Other\u0026#39;, \u0026#39;Highest score\u0026#39; ))+ scale_shape(\u0026#39;Meals bought from\\nfarmers market\u0026#39;)+ labs(title = \u0026#39;Highest scoring-paths graph\u0026#39;) We can see that our approach to identifying the most appropriate project partner favours those nodes that eat every meal with food bought from the farmers market. Of course, this is just a demonstration of how looping can be used with network analysis to find optimum routes within a network.\n   ","date":1590883200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590928321,"objectID":"59e04862b487efd69e3f89ab53d71304","permalink":"/post/sna/","publishdate":"2020-05-31T00:00:00Z","relpermalink":"/post/sna/","section":"post","summary":"Introduction I’ve been doing some work lately on social networks that exist between organisations or institutions. This is nice as it builds on some of my dissertation work, and I generally find it quite interesting. Networks that form between organisations are often quite powerful, in that they can illustrate where strong areas of like-minded work exist or where new connections might be useful in strengthing one organisation’s influence.\nWhy like me?","tags":["ggraph","tidygraph","network"],"title":"Be like me - looping through shortest distance analysis","type":"post"},{"authors":[],"categories":["R"],"content":" Last updated on 15-Jun-2020  Introduction Now that we are square in the middle of the Covid-19 pandemic, I thought it might be beneficial to look at some statistics associated with the number of cases. We’ll differentiate our analysis by focusing on cases of Covid-19 in rural areas of the U.S. There are a couple of reasons for this: mainly, rural analytics is my speciality, so while I don’t know much about the virus, I do know some about rural societies and economies; we can easily find pertinent data on rural counties; and, we can utilise some cool built-in R functions to help us along the way. Before we go on it’s important to note that:\nI am not a medical doctor or specialist in viral diseases. This post is meant to be a learning resource for people interested in looking at the pandemic from a rural perspective. Any potential interesting findings must be further investigated before any judgements can be made.   Data The data for this post comes from two places: Covid-19 cases from the New York Times github; and the USDA Rural-Urban Classification Codes.\nData scientists at The New York Times have been collating data on the number of cases of Covid-19 by county in the U.S.. It is available at their GitHub page, which means that one can easily access and update the data through pull requests. The data can also be downloaded and saved to a local drive.\nTo get a rural understanding of Covid-19 cases, we’ll use the USDA data on rural-urban classification of U.S. counties, which can be downloaded using the hyperlink above. Many countries have geographical classifications for rural and urban spaces. Usually, a low-level geography is chosen that spans an entire country. A continuum of rural-urban is used to describe each geographical area that goes from very urban to very rural (though not using those specific labels).\nSo we’ll use those two datasets, join them together and investigate how many cases of Covid-19 are found in rural areas within the U.S..\n Analysis Libraries and themes Tidyverse packages will be used to do most of the heavy lifting. We’ll do the data analysis using the dplyr package, and we’ll do our plots with ggplot2.\nlibrary(tidyverse) library(lubridate) library(janitor) library(scales) library(cowplot) # USDA Rural-Urban classification codes post_theme \u0026lt;- function(...) { theme( text = element_text( color = \u0026#39;black\u0026#39;, family = \u0026#39;serif\u0026#39;), axis.text = element_text( color = \u0026#39;black\u0026#39;), axis.text.x = element_text(angle = 45, hjust = 1), panel.background = element_blank(), axis.line.x = element_line( color = \u0026#39;black\u0026#39;), axis.ticks = element_blank(), plot.margin = margin(.75, .75, .75, .75, \u0026#39;cm\u0026#39;), plot.caption = element_text(hjust = 0, face = \u0026quot;italic\u0026quot;), plot.title = element_text( face = \u0026#39;bold\u0026#39;), plot.subtitle = element_text(face = \u0026#39;bold\u0026#39;), plot.title.position = \u0026quot;plot\u0026quot;, plot.caption.position = \u0026quot;plot\u0026quot;, strip.background = element_blank(), strip.text = element_text( face = \u0026#39;bold\u0026#39;) ) + theme(...) # this bit allows us to make changes using this same function instead of calling two theme functions. } # I created a new R-project to house the Covid-19 data in my Documents directory. covid_county \u0026lt;- read_csv(\u0026#39;~/Documents/R/covid-19-data/us-counties.csv\u0026#39;) # Pull in the USDA data from a directory I created in my cloud storage. rural_urban \u0026lt;- read_csv(\u0026#39;~/OneDrive - SRUC/Data/usda/ruralurbancodes2013.csv\u0026#39;) %\u0026gt;% select(fips, rucc_2013, desc = description) Now that we’ve got the data loaded from Covid-19 and USDA Rural-Urban Classifications, we are going to use some of R’s base functionality. R has two functions that help with general data analysis and joins: state.name, which has all 50 U.S. state names; and, state.region, which has the 50 U.S. state’s categorised into geographical regions.\nWe’ll use these two functions in a tibble to help join the Covid-19 data with the Rural-Urban Classifications.\nstate_region \u0026lt;- tibble(state = state.name, region = state.region) covid_region \u0026lt;- covid_county %\u0026gt;% left_join(rural_urban, by = \u0026#39;fips\u0026#39;) %\u0026gt;% left_join(state_region, by = \u0026#39;state\u0026#39;) %\u0026gt;% mutate(week = floor_date(date, \u0026#39;week\u0026#39;)) Now we have our working data frame called covid_region. It has the following variable names: date, county, state, fips, cases, deaths, rucc_2013, desc, region, week. We’ll use the description variable to filter out rural counties only. There are two classifications of rural areas - those that are adjacent to more metro places and those that are not. Those that are not adjacent to metro areas are adjacent to other rural areas, which makes them somewhat more remote, as people living there need to travel further to get to service centres.\nWe use the group_by/summarise functionality from dplyr to find the sum of Covid-19 cases and deaths by each week, region and for both rural classifications.\nweekly_regions \u0026lt;- covid_region %\u0026gt;% filter(str_detect(desc, \u0026#39;rural\u0026#39;)) %\u0026gt;% group_by(week, region, desc) %\u0026gt;% summarise(cases = sum(cases, na.rm = T), deaths = sum(deaths, na.rm = T)) %\u0026gt;% ungroup() %\u0026gt;% gather(key, value,-c(week, region, desc)) We’re going to make a fancy-looking plot for this post, something that you might like to share on social media or include in a work report. To help clean up the plot a bit, we’ll use a few approaches that are laid out in the code below.\n# each label for the x-axis which we\u0026#39;ll use to make some nice looking data labels. week_n \u0026lt;- weekly_regions %\u0026gt;% count(week) %\u0026gt;% pull(week) # we\u0026#39;ll use scale_color_manual with our own color choice col_v \u0026lt;- c(\u0026#39;#3E4A89FF\u0026#39;, \u0026#39;#FDE725FF\u0026#39;) names(col_v) \u0026lt;- unique(weekly_regions$desc) # a simple label_wrap function for the legend label_wrap \u0026lt;- function(x, n = 25){ paste0(str_wrap(x, n), \u0026#39;\\n\u0026#39;) } # date labels that use drops today\u0026#39;s date into the caption of the plot. today_date \u0026lt;- as_date(Sys.time()) %\u0026gt;% format(\u0026#39;%d %B, %Y\u0026#39;) OK, now we’ll create the main ggplot that uses facet_wrap to look at each region in the U.S. over time.\nweekly_regional_gg \u0026lt;- weekly_regions %\u0026gt;% filter(key == \u0026#39;cases\u0026#39;) %\u0026gt;% ggplot(aes(week, value, group = desc)) + geom_line(size = 1.25, aes(color = desc))+ geom_point(size = 4, color = \u0026#39;grey90\u0026#39;)+ geom_point(size = 3.5, aes(color = desc))+ scale_x_date(breaks = week_n, date_labels = \u0026#39;%d-%b\u0026#39;)+ scale_y_continuous(labels = comma) + scale_color_manual( values = col_v, labels = label_wrap)+ facet_wrap( ~ region) + post_theme() And now we’ll add the labels and annotations.\n(weekly_regional_gg \u0026lt;- weekly_regional_gg + labs( title = \u0026#39;Weekly Total U.S. COVID-19 Cases by Region in Rural Counties\u0026#39;, subtitle = \u0026#39;SOURCE: The New York Times, based on reports from state and local health agencies \u0026amp;\\nThe USDA Rural-Urban Continuum Codes (2013).\u0026#39;, x = \u0026#39;\\nWeek of\u0026#39;, y = \u0026#39;Total\u0026#39;, color = str_wrap(\u0026#39;USDA Rural-Urban Continuum Codes (2013)\u0026#39;, 25), caption = str_c(\u0026#39;By Elliot Meador, PhD; @Elliot_Meador\\nNOTE: Last week may not yet be complete.\\nProduced \u0026#39;, today_date))) It looks as though rural counties in the south are reporting more cases than the rest of the U.S.. It’s worth investigating the southern counties to see if one state/county is pulling the statistics higher for the entire region, or if the trend is true for the majority of counties. There are a few ways to do this, but the most straightforward is to replicate the plot above but for southern states only. The code below does this.\nsouthern_rural_cases \u0026lt;- covid_region %\u0026gt;% filter(str_detect(desc, \u0026#39;rural\u0026#39;), region == \u0026#39;South\u0026#39;) %\u0026gt;% group_by(week, state, desc) %\u0026gt;% summarise(total = sum(cases, na.rm = T)) %\u0026gt;% ungroup() viridis \u0026lt;- scales::viridis_pal() southern_state \u0026lt;- southern_rural_cases %\u0026gt;% count(state) %\u0026gt;% pull(state) state_cols \u0026lt;- viridis(length(southern_state)) names(state_cols) \u0026lt;- southern_state labels_df \u0026lt;- southern_rural_cases %\u0026gt;% group_by(state, desc) %\u0026gt;% filter(week == max(week)) %\u0026gt;% ungroup() %\u0026gt;% mutate(desc = str_wrap(desc, 35)) weeks_lab \u0026lt;- southern_rural_cases %\u0026gt;% count(week) %\u0026gt;% pull(week) southern_plot \u0026lt;- southern_rural_cases %\u0026gt;% mutate(desc = str_wrap(desc, 35)) %\u0026gt;% ggplot(aes(week, total, group = state))+ geom_line(aes(color = state), show.legend = F)+ geom_point(color = \u0026#39;white\u0026#39;, size = 2.25)+ geom_point(aes(color = state), size = 2, show.legend = F)+ geom_text(data = labels_df, aes(label = state, x = week, y = total, color = state), size = 2, hjust = 0, nudge_x = 1.25, check_overlap = T, show.legend = F)+ scale_x_date(breaks = weeks_lab, date_labels = \u0026#39;%b-%d\u0026#39;)+ scale_color_manual(values = state_cols)+ scale_y_log10(labels = comma)+ facet_grid(~desc)+ coord_cartesian(clip = \u0026#39;off\u0026#39;)+ post_theme(plot.margin = margin(1.25, 1.25, 1.25, 1.25, \u0026#39;cm\u0026#39;), panel.spacing = unit(2, \u0026quot;lines\u0026quot;)) And just like above, we’ll add our labels seperate.\n(southern_plot_ii \u0026lt;- southern_plot+ labs(title = \u0026#39;Comparing Covid-19 Cases Across Rural Counties in the Southern U.S.\u0026#39;, subtitle = \u0026#39;SOURCE: The New York Times, based on reports from state and local health agencies \u0026amp;\\nThe USDA Rural-Urban Continuum Codes (2013).\u0026#39;, x = \u0026#39;Week of\u0026#39;, y = \u0026#39;Total\\nLog10-scale\u0026#39;, caption = str_c(\u0026#39;By Elliot Meador, PhD; @Elliot_Meador\\nNOTE: Last week may not yet be complete.\\nProduced \u0026#39;, today_date)))   County-level analysis In the above analysis, we are showing aggregate statistics across states. This gives a good overall understanding of high-level trends, but the next step is to look a bit closer at what happens at a more granular level. Let’s take a look at all rural counties in the U.S. and plot the total cases by the total deaths - which is a common plot I’ve found online.\nWe’ll only look at rural counties that have at least 10 recorded cases. We’re going to do a twist on a standard scatterplot, where we plot the state abbreviation of the county instead of a simple point. We’ll also colour all abbreviations of the same state in the same colour; this will help draw the readers’ eye to similar states. Lastly, we won’t have a colour legend as this many states will lead to a massive legend that will overpower the plot.\ncovid_county_rural \u0026lt;- covid_county %\u0026gt;% left_join(rural_urban, by = \u0026#39;fips\u0026#39;) %\u0026gt;% filter(str_detect(desc, \u0026#39;rural\u0026#39;)) %\u0026gt;% select(-date, -county, -rucc_2013) %\u0026gt;% group_by(fips) %\u0026gt;% mutate(tot_deaths = sum(deaths, na.rm = T), tot_cases = sum(cases, na.rm = T)) %\u0026gt;% ungroup() %\u0026gt;% filter(tot_cases \u0026gt; 10, tot_deaths \u0026gt; 1) %\u0026gt;% # must have at least 10 cases select(-cases, -deaths) %\u0026gt;% distinct(fips, .keep_all = T) plot_states \u0026lt;- covid_county_rural %\u0026gt;% distinct(state) %\u0026gt;% pull() state_cols \u0026lt;- sample(viridis_pal()(length(plot_states))) names(state_cols) \u0026lt;- sample(plot_states) update_date_anno \u0026lt;- paste(\u0026#39;Data updated on\u0026#39;, format(max(covid_county$date), \u0026#39;%d-%b-%Y\u0026#39;)) rural_point_plot \u0026lt;- covid_county_rural %\u0026gt;% left_join(tibble(state = state.name, abb = state.abb)) %\u0026gt;% ggplot(aes(tot_cases, tot_deaths))+ geom_text(aes(label = abb, color = state), size = 5, show.legend = F)+ scale_x_log10(labels = comma)+ scale_y_log10(labels = comma)+ scale_fill_manual(values = state_cols)+ scale_color_manual(values = state_cols)+ post_theme()+ labs(title = \u0026#39;Comparing Covid-19 Cases and Deaths Across Rural Counties in the U.S.\u0026#39;, subtitle = \u0026#39;SOURCE: The New York Times, based on reports from state and local health agencies \u0026amp;\\nThe USDA Rural-Urban Continuum Codes (2013).\u0026#39;, x = \u0026#39;Total Cases\u0026#39;, y = \u0026#39;Total Deaths\u0026#39;, caption = paste0(\u0026#39;Only counties shown with more than 10 cases and at least 1 death recorded.\\nNOTE:Horizontal and vertical axes are on log10 scales.\\n\u0026#39;,update_date_anno)) rural_point_plot + theme(text = element_text(size = 15))+ annotate(\u0026#39;label\u0026#39;, x = 5000, y = 5, label = str_wrap(\u0026#39;Letters are state abbreviations. Each pair represents a different county within the listed state. State abbreviations are consistently colored.\u0026#39;, 40), size = 3.5, family = \u0026#39;serif\u0026#39;, hjust = 0.5)  Key Findings It looks like, at least on the surface of things, that rural places in southern counties report more Covid-19 cases than other rural counties across the U.S.. When we investigated this further by breaking down the states within the southern category, we can see that there is somewhat even spread. That is, one state is not pulling the rest along, which could obscure the actual trend.\nI’m from the south-east of the U.S. (Mississippi), and I can say with some certainty that Mississippi, Alabama and Georgia have quite high levels of poverty and ill-health that usually accompanies poverty in the U.S.. It is interesting to see these states reporting higher levels of Covid-19, and it begs the question, “Is there an association between poorer rural places and higher levels of reported cases?” Statistically, I think there probably is (though this needs testing). Even if it is found to be statistically correlated, we still won’t know why we’re seeing these trends until we do more qualitative work in the region to pair with our quantitative findings.\nThanks to the hard work of the folks at the New York Times, we can update our findings over time to see if the trends hold. So stay tuned!\n ","date":1587859200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1587926717,"objectID":"e1dea9f294b4a780d9508903d70ccf9d","permalink":"/post/covid-19-rural-deltanomics/","publishdate":"2020-04-26T00:00:00Z","relpermalink":"/post/covid-19-rural-deltanomics/","section":"post","summary":"Last updated on 15-Jun-2020  Introduction Now that we are square in the middle of the Covid-19 pandemic, I thought it might be beneficial to look at some statistics associated with the number of cases. We’ll differentiate our analysis by focusing on cases of Covid-19 in rural areas of the U.S. There are a couple of reasons for this: mainly, rural analytics is my speciality, so while I don’t know much about the virus, I do know some about rural societies and economies; we can easily find pertinent data on rural counties; and, we can utilise some cool built-in R functions to help us along the way.","tags":["Data","ggplot","dplyr"],"title":"Covid-19 and Rural Areas in the U.S.","type":"post"},{"authors":[],"categories":["R","SNA"],"content":"  Why create a new dataset? I’d like to do a series of posts looking at social network analysis using primary data (i.e. data collected by yourself.). There are a lot of different examples of when you might want to use a survey to collect data for use in analysing social networks. But that’s for another time.\nThe purpose of this post is to create a new dataset that can be used in practising social network analysis in future posts. Creating a new dataset in R has a lot of useful advantages. The biggest advantage is that we will have a single dataset that can be used in all future examples when learning SNA with surveys.\nCreating a new dataset is also a great learning opportunity because we will reverse engineer a dataset around specific modelling, correlations and otherwise interesting easter-eggs that we can use as learning opportunities in future posts. We will rely on the power of probability statistics to help us get there. And as we make decisions about how to structure our dataset, we’ll learn some important aspects of social network analysis and general data science. We’ll save this for the end though. So, let’s get started!\n Building a new dataset As with most posts on Deltanomics, we’ll use a tidy framework. So, that means loading tidyverse, and we’ll go ahead and load our other SNA workhorse packages.\n# For a tidy framework library(tidyverse) library(glue) library(scales) # Our graphing libraries library(igraph) library(tidygraph) library(ggraph) An edgelist The first thing we need to do is create an edgelist structure in our data. Really anything can be used as an edgelist as it’s just two columns that represent an edge is meant to be drawn between adjacent cells. A typical use of surveys in SNA is to look at how information flows between two people and the influence that the information has on sustainable behaviours. So let’s create two columns that would reasonably collect that type of information.\nRespondent name First, we need a column for the respondent’s name or identification. This column length will be the first and primary argument in our function to allow us to create datasets of any size we choose.\nFor this, let’s use one of my favourite packages randomNames to generate some realistic names.\nlibrary(randomNames) create_sna_data \u0026lt;- tibble( # let\u0026#39;s pull 100 random names to start resp_name = randomNames(100, which.names = \u0026#39;both\u0026#39;))  Information holder Next, we’ll create a column that holds the name of whom the respondent goes to for information. We want our social network to be complete; meaning that every node in the graph will attribute data. To ensure this happens, we need to take special care that all of the possible nodes are also respondents. In short, the second column of the edgelist needs to be completely contained within the first.\n# 1. Make a disconnect graph g \u0026lt;- make_empty_graph() %\u0026gt;% add_vertices(2) # 2. Run a while loop to ensure that a connected # graph is created -- this will help smooth over some of the graphing functions for later. # while (is.connected(g)== FALSE) { g \u0026lt;- create_sna_data %\u0026gt;% mutate(info_one = sample( sample(resp_name, 80), # create 2nd column nrow(.), T)) %\u0026gt;% # as subset of the as_tbl_graph() # first. } # send it back to the original name create_sna_data \u0026lt;- g Now, let’s take a look at how the social network contained within the data looks like. The network should loosely resemble a sparsely connected sociogram, and it should serve our purposes well.\n  Node \u0026amp; edge attributes Now that we have our edge list as the first two columns of the data set, we can start to add some node and edge attributes. However, we can’t just randomly create new variables and values because we want a dataset that resembles what we might find in the real world. This means certain variables should be related or correlated with one another. And, because we’re interested in network analysis, a node’s position in the network should also influence their values in key columns. To achieve this, we’ll need to reverse engineer the values based on some graph analysis.\nNode attributes We’ll do some rapid-fire node correlations with some key socio-economic variables.\nIncome category create_sna_data \u0026lt;- create_sna_data %\u0026gt;% mutate(income_pre_tax = map_chr(degree(create_sna_data), function(x){ # random normal using degree as the mean # and a standard deviation of 2.5 random_norm \u0026lt;- rnorm(n = 1, mean = x, sd = sample(2.5, 1, F)) dollar(abs(random_norm)*15000, prefix = \u0026#39;£\u0026#39;) })) Our dataset has a lot of randomness to it, so it’s impossible to tell what the correlation is. But, it should at least be positive and somewhat linear. There aren’t likely to be many nodes that have the maximum number of degrees, so the variance should drop off as the degree increases (but this isn’t a guarantee!).\nA boxplot of showing degree and income is shown below.\nSo, the theoretical people in our dataset with more connections to others should make more money, something that, could conceivably be true.\n Neighbourhood influence A common question in network analysis is: do nodes behave differently when they are connected to certain nodes. It’s like the old adage ~ if you lie down with dogs you’ll get up with fleas. For this, we’ll pick out some random nodes and have their neighbourhoods adopt a similar value for a question like: do you buy the majority of your fruit and veg from a farmers market?\ninfluencers_df \u0026lt;- map_df(1:10, function(x){ # pull a random node name node. \u0026lt;- sample(V(create_sna_data)$name, 1) # get the node id, because to_local_neighborhood requires a numeric identifier (this is due to igraph). node_id. \u0026lt;- match(node., V(create_sna_data)$name) # pull the neighbourhoods of each node from above. neighbours. \u0026lt;- create_sna_data %\u0026gt;% to_local_neighborhood(node = node_id., order = 1) %\u0026gt;% .[[1]] %\u0026gt;% as_tibble() %\u0026gt;% pull(name) # create a tibble of both values for use in the next step tibble(neighours. = neighbours., centre = rep(node., length(neighbours.))) }) # create new variable for each value returned above. create_sna_data \u0026lt;- create_sna_data %\u0026gt;% mutate(buy_farm_mark = case_when( name %in% influencers_df$centre ~ \u0026#39;Every meal\u0026#39;, name %in% influencers_df$neighours. ~ \u0026#39;Most meals\u0026#39;, T ~ \u0026#39;Hardly any meals\u0026#39; ), buy_farm_mark = factor(buy_farm_mark, levels = c(\u0026#39;Every meal\u0026#39;, \u0026#39;Most meals\u0026#39;, \u0026#39;Hardly any meals\u0026#39;))) That was a bit verbose and somewhat complicated, but it will be worth it. Let’s take a look below to see how it looks in our new data.  Community influence We’ll use a community detection algorithm for the last node attribute for our dataset. This one is a bit easier as we’ll just create a new variable using the group_infomap function from tidygraph/igraph.\ncreate_sna_data \u0026lt;- create_sna_data %\u0026gt;% to_undirected() %\u0026gt;% mutate(cows_on_farm = as.factor(group_infomap())) The plot below illustrates the communities detected by group_infomap. The only thing we’ve done here is to rename the variable. Easy enough! We’ll now add edge attributes.\n  Edge attributes Edge attributes won’t be as complicated as node attributes for as we’ve aleady identified the relationship between nodes (edges). We’ll just need to think about a variable that would makes sense for trustful communities. One could be that number of cows is related to higher levels of trust (not super likely in the real world, but anything’s possible!). It’s an easy edge attribute to calculate so let’s do that one.\ncreate_sna_data \u0026lt;- create_sna_data %\u0026gt;% mutate(trust_score = round( rescale( as.numeric(cows_on_farm), c(1, 10))))   Back to a tibble We’ve been workig with a tidygraph object for most the post. We’ll want to create a tibble for our purposes. Remember, the goal is to create a mock survey dataset that we can use in the future to learn SNA. So it should look authentic. Let’s do that now.\nname_id_df \u0026lt;- create_sna_data %\u0026gt;% as_tibble() %\u0026gt;% transmute(name, value = row_number()) create_sna_data \u0026lt;- create_sna_data %\u0026gt;% activate(edges) %\u0026gt;% as_tibble() %\u0026gt;% gather(key, value) %\u0026gt;% left_join(name_id_df) %\u0026gt;% split(.$key) %\u0026gt;% bind_cols() %\u0026gt;% select(resp_name = name, recieve_info = name1) %\u0026gt;% bind_cols(create_sna_data %\u0026gt;% as_tibble() %\u0026gt;% select(-name)) All right, that’s it! We can look at our data below; hopefully, it looks like something we might collect in the future for SNA research.\n Table 1: Our mock dataset for SNA    resp_name  recieve_info  income_pre_tax  buy_farm_mark  cows_on_farm  trust_score      Roberts, Nicole  el-Younis, Tayyiba  £6,389.69  Hardly any meals  10  6    Dixon, Lanasia  Stirewalt, Sutter  £23,319.29  Every meal  1  1    Warat, Calvin  Richardson, Chelsea  £27,098.81  Most meals  11  6    Chroneos, Samuel  Ocampo, Ruth  £26,924.22  Hardly any meals  7  4    Lamichhane, Wesley  al-Shaheen, Husaam  £36,799.65  Hardly any meals  3  2    Loehr, Jamie  Schmalz, Keiley  £73,347.91  Most meals  5  3       ","date":1585326307,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1585326307,"objectID":"93453da59df3793d7c3cdefe58bb7ecd","permalink":"/post/networks-from-survey-data-creating-mock-data/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/post/networks-from-survey-data-creating-mock-data/","section":"post","summary":"Why create a new dataset? I’d like to do a series of posts looking at social network analysis using primary data (i.e. data collected by yourself.). There are a lot of different examples of when you might want to use a survey to collect data for use in analysing social networks. But that’s for another time.\nThe purpose of this post is to create a new dataset that can be used in practising social network analysis in future posts.","tags":["Data","network"],"title":"Networks from survey data: Creating mock data","type":"post"},{"authors":["Elliot Meador PhD"],"categories":null,"content":"","date":1582329600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1582329600,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"/talk/example/","publishdate":"2020-02-22T00:00:00Z","relpermalink":"/talk/example/","section":"talk","summary":"A talk on findings from a one year investigation of where people get their plant health information online in Scotland.","tags":null,"title":"Crop Production in Northern Britian","type":"talk"},{"authors":null,"categories":["R","SNA"],"content":"   Introduction  This is the initial Deltanomics blog post. So, in this post, I’ll cover a few different approaches to analysis and data visualisation rather quickly that provides a good overview of the types of things covered in this blog.\nLet’s start with loading the packages we’ll use. Also, let’s create a ggplot theme that allows us to easily make changes when we want.\n## Libraries used in analysis library(tidyverse) library(magrittr) library(scales) library(RColorBrewer) library(janitor) library(ggraph) library(tidygraph) library(graphlayouts) library(flextable) ## a congruent theme throughout for plots post_theme \u0026lt;- function(...){ theme(text = element_text(color = \u0026#39;black\u0026#39;, family = \u0026#39;serif\u0026#39;), axis.text = element_text(color = \u0026#39;black\u0026#39;), panel.background = element_blank(), axis.line.x = element_line(color = \u0026#39;black\u0026#39;), axis.ticks = element_blank(), plot.margin = margin(.5, .5, .5, .5, \u0026#39;cm\u0026#39;), plot.caption = element_text(hjust = 0, face= \u0026quot;italic\u0026quot;), plot.title = element_text(face = \u0026#39;bold\u0026#39;), plot.subtitle = element_text(face = \u0026#39;bold\u0026#39;), plot.title.position = \u0026quot;plot\u0026quot;, plot.caption.position = \u0026quot;plot\u0026quot;) + theme(...) # this bit allows us to make changes using this same function instead of calling two theme functions. }  Data source  We’re going to look at some FAO data on apples. It comes from the FAO’s online data portal, which can be accessed here. The website allows users to specify the varibles they want to analysis and download them into a .csv file. This makes working with the data a breeze using the tidyverse. Let’s first take a quick look at the data.\nWe use read_csv from the readr package (included in the tidyverse library) and the function clean_names from the janitor package. clean_names does exactly what it says it does – cleans up a dataframe/tibbles’s variable names so that they are easy to use in analysis.\napples \u0026lt;- read_csv(\u0026#39;/Users/emeador/Downloads/FAOSTAT_data_1-1-2020.csv\u0026#39;) %\u0026gt;% clean_names()  Data Analysis   General analysis  Let’s do some really quick data analysis to get a feel of what the data works with. From there we’ll move on towards looking at apple supply chain. A quick bar plot shows the top 20 exporting countries.\napple_export_total \u0026lt;- apples %\u0026gt;% filter(element == \u0026#39;Export Quantity\u0026#39;, flag_description == \u0026#39;Official data\u0026#39;)%\u0026gt;% group_by(reporter_countries) %\u0026gt;% summarise(total = sum(value, na.rm = T)) %\u0026gt;% mutate(reporter_countries=fct_reorder(reporter_countries,total)) apple_export_total %\u0026gt;% top_n(20) %\u0026gt;% ggplot(aes(reporter_countries, total))+ geom_col(fill = \u0026#39;#ff0800\u0026#39;)+ scale_y_continuous(expand = c(0,0), labels = comma)+ coord_flip()+ post_theme()+ labs(title = \u0026#39;Top 20 countries that export apples in 2017\u0026#39;, subtitle = \u0026#39; SOURCE: FAO Detailed trade matrix\u0026#39;, x = NULL, y = \u0026#39;Tonnes\u0026#39;, caption = \u0026#39;NOTE: Only official data shown\u0026#39;) China, mainland is the highest exporter of tonnes of apples in 2017 according to the data with 1,328,374 tonnes of apples exported.\nLet’s take a look at the top importers of apples to the UK. We can adapt the code above to create a bar plot that filters by the variable parter_countries, which we’ll set to filter for United Kingdom using the == operator.\nUK_import \u0026lt;- apples %\u0026gt;% filter(element == \u0026#39;Export Quantity\u0026#39;, partner_countries == \u0026#39;United Kingdom\u0026#39;, flag_description == \u0026#39;Official data\u0026#39;) %\u0026gt;% group_by(reporter_countries) %\u0026gt;% summarise(total = sum(value, na.rm = T)) %\u0026gt;% mutate(reporter_countries = fct_reorder(reporter_countries, total)) %\u0026gt;% top_n(20) UK_import %\u0026gt;% ggplot(aes(reporter_countries, total))+ geom_col(fill = \u0026#39;#ff0800\u0026#39;)+ scale_y_log10(expand = c(0,0), labels = comma)+ coord_flip()+ post_theme()+ labs(title = \u0026#39;Where does the UK get its apples from?\u0026#39;, subtitle = \u0026#39; SOURCE: FAO Detailed trade matrix\u0026#39;, x = NULL, y = \u0026#39;log10(Tonnes)\u0026#39;, caption = \u0026#39;NOTE: Only official data shown\u0026#39;)  The UK imported 444,906 tonnes of apples in 2017. Over a quarter of all apples imported to the UK came from France and other European countries. So they didn’t have to travel too far. However, the largest and third largest imports came from South Africa and New Zealand, i.e. they traveled halfway across the world!\nOf course, it’s common for goods to travel great distances in today’s global economy. This of course impacts sustainability as traveling across the world increases the carbon output. And while a total carbon assessment is out of the scope of this post, we can use network analysis to help better our understanding of how the global apple supply chain operates and where the UK sits in it all.\n Network analysis  We need to create an igraph object in R from our apples tibble to work with. The easiest way to do this is to create an edgelist from our data. An edgelist is a two-column list of nodes where adjacent nodes form an edge. igraph and by extension tidygraph will create graphs with dataframes that an edgelist in their first two columns. The remaining columns will be used as edge attributes.\nTable 1: Edgelist examplereporter_countries\npartner_countries\nGreece\nBahrain\nGermany\nCyprus\nIreland\nAustralia\nPoland\nArmenia\nBrunei Darussalam\nJapan\nEgypt\nTurkey\nAustria\nMalta\nPoland\nRepublic of Moldova\nLebanon\nNew Zealand\nDenmark\nIreland\n An example of the edgelist format is shown above in Table 1. In this example Greece is adjacent to Bahrain, so an edge will be drawn between the two.\nThe code below creates a graph and plots it using ggraph.\naph \u0026lt;- apples %\u0026gt;% filter(element == \u0026#39;Export Quantity\u0026#39;, flag_description == \u0026#39;Official data\u0026#39;) %\u0026gt;% select(reporter_countries, partner_countries, value) %\u0026gt;% as_tbl_graph() aph %\u0026gt;% mutate(degree = centrality_degree()) %\u0026gt;% ggraph(\u0026#39;stress\u0026#39;)+ # specify the DH layout geom_edge_fan(aes(alpha = ..index..), color = \u0026#39;#654321\u0026#39;, show.legend = F)+ geom_node_point(aes(size = degree), color = \u0026#39;#00c400\u0026#39;)+ scale_size(range = c(1, 2.5), name = \u0026#39;# different countries\\n that exporting apples\u0026#39;)+ coord_equal()+ theme_graph(foreground = T)+ labs(title = \u0026#39;The apple supply chain ... hairball\u0026#39;, caption = \u0026#39;Without much formatting, the network is complicated and unreadable.\\nThe look is characteristic of the hairball that sometimes occurs in network visualisations.\u0026#39;) The graph above is utterly unintelligable, and shoudn’t really appear in something you plan to publish. There are few things we can do to make the graph easier to understand when visualised. They are:\nRemove unnessary edges – this serves a few purposes: it frees up some of the clutter that comes from having too many lines on the plot; but, another lesser known thing is that it actually affects the underlying layout algorythim We’ll get into this in another post, but, in short, layout algorythims (usually) attempt to group nodes together in a way that reduces overlapping edges. Fewer edges can mean the nodes are spaced in a way so that naturally occuring patterns in connectivity are more easily seen. Identify and showcase interesting patterns – network graphs are often made better when they illustrate specific patterns that a researcher has previously identified through visualising the data or running statistical analysis. This is similar to plotting percents or sums using bars graphs – you choose the plot style (think geom_*’s in ggplot2) that corresponds to what you want to showcase!  The following code creates an edgelist in the form of a tibble that has each county's top 2 exporting countries (the two countries where it send the most apples). This greatly reduces the number of edges and allows more nuanced findings in terms of apple trading patterns to emerge.\nUK_neighborhood_1 \u0026lt;- aph %\u0026gt;% to_local_neighborhood(node = 85, order = 1, mode = \u0026#39;in\u0026#39;)%\u0026gt;% .[[1]] %\u0026gt;% activate(edges) %\u0026gt;% group_by(from) %\u0026gt;% top_n(2, value) %\u0026gt;% activate(nodes) %\u0026gt;% mutate(degree = centrality_degree()) UK_neighborhood_1 %\u0026gt;% ggraph()+ geom_edge_fan(aes(alpha = value), color = \u0026#39;#654321\u0026#39;, width = 1.25, arrow = arrow(length = unit(2.5, \u0026#39;mm\u0026#39;), type = \u0026#39;closed\u0026#39;), end_cap = circle(5, \u0026#39;mm\u0026#39;))+ geom_node_label(aes(size = degree, label = str_wrap(name, 10)), color = \u0026#39;#ff0800\u0026#39;, show.legend = F)+ scale_size(range = c(2, 3))+ scale_edge_alpha(range = c(.5, 1), labels = comma)+ scale_edge_width_continuous(range = c(.5, 1.5))+ coord_equal()+ theme_graph(foreground = T)+ labs(title = \u0026#39;The UK\\\u0026#39;s 1-degree apple supply neighborhood\u0026#39;, caption = \u0026#39;Only the top-two export destinations are shown per country. All nodes have exactly two out-degrees.\\nSome nodes have in-degrees because they happen to be another country\\\u0026#39;s top-two imports.\u0026#39;)  Visualising travel distance   A quick base-map of the world  We can draw on existing online resources to help us prepare a base map of the world using ggplot and a (newish) file type called simple features sf. Here is a great resource on mapping and spatial analysis in R using ggplot2 by Mel Moreno and Mathieu Basille. I highly recommend checking it out. sf are my prefered object types to work with in R when doing any type of mapping or spatial analysis. The map is projected using the Equal Earth projection to help readers more easily see the network edges (when they are plotted).\nLet’s take a look at a world map that we can use as a base for the network plot. We’ll use the rnaturalearth and rnaturalearthdata packages to provde parameters and data as sf objects, and we’ll plot the map in ggplot2. ggplot2 and ggraph can objects can be stacked on top of one another to create a flowing network map.\nlibrary(rnaturalearth) library(rnaturalearthdata) countries \u0026lt;- ne_countries(returnclass = \u0026quot;sf\u0026quot;) graticules \u0026lt;- ne_download(type = \u0026quot;graticules_15\u0026quot;, category = \u0026quot;physical\u0026quot;, returnclass = \u0026quot;sf\u0026quot;) ## OGR data source with driver: ESRI Shapefile ## Source: \u0026quot;/private/var/folders/ck/v11m55r567d9z7ql_1vvdy600000gn/T/Rtmpb9TTSG\u0026quot;, layer: \u0026quot;ne_110m_graticules_15\u0026quot; ## with 35 features ## It has 5 fields ## Integer64 fields read as strings: degrees scalerank bound_box \u0026lt;- ne_download(type = \u0026quot;wgs84_bounding_box\u0026quot;, category = \u0026quot;physical\u0026quot;, returnclass = \u0026quot;sf\u0026quot;) ## OGR data source with driver: ESRI Shapefile ## Source: \u0026quot;/private/var/folders/ck/v11m55r567d9z7ql_1vvdy600000gn/T/Rtmpb9TTSG\u0026quot;, layer: \u0026quot;ne_110m_wgs84_bounding_box\u0026quot; ## with 1 features ## It has 2 fields (base_world \u0026lt;- ggplot() + geom_sf(data = bound_box, col = \u0026quot;grey20\u0026quot;, fill = \u0026quot;transparent\u0026quot;) + geom_sf(data = countries, aes(fill = sovereignt), color = \u0026#39;grey\u0026#39;, lwd = 0.3, show.legend = F) + scale_fill_viridis_d(direction = -1)+ post_theme(legend.position = \u0026#39;bottom\u0026#39;, legend.background = element_rect(fill = \u0026#39;grey95\u0026#39;, color = \u0026#39;black\u0026#39;))+ theme(plot.title = element_text(size = 24, face = \u0026#39;bold\u0026#39;), axis.text = element_blank())+ labs(title = \u0026#39;World Map\u0026#39;, caption = \u0026#39;Projected with the Equal Earth map projection \u0026#39;))  Combining the basemap and network graph  In preparation for our supply chain we need to calculate the node positions for each country. A good starting point is to use a polygon’s centroid points. A polygon centroid is the mathmatical centre of mass. Which means that it’s slightly different that the mean of longitude and latitude. The unique and non-uniform shapes of most policital boundaries mean that centre-mass locations are usually preferred. We can use the ‘st_centroid’ function from the ‘sf’ package to calculate the centroids for every country in the world. We’ll save this as ‘country_centroids’.\n# get centroids country_centroids \u0026lt;- countries %\u0026gt;% sf::st_centroid() %\u0026gt;% as_tibble() %\u0026gt;% select(name, geometry) %\u0026gt;% mutate(geometry = as.character(geometry)) %\u0026gt;% separate(geometry, c(\u0026#39;x\u0026#39;, \u0026#39;y\u0026#39;), sep = \u0026#39;,\u0026#39;) %\u0026gt;% mutate_at(vars(x, y), list(~parse_number(.))) # a little cleaning of a few countries to # ensure that they merge properly. node_centroids \u0026lt;- UK_neighborhood_1 %\u0026gt;% as_tibble() %\u0026gt;% select(name) %\u0026gt;% mutate(name = case_when( str_detect(name, \u0026#39;China\u0026#39;) ~ \u0026#39;China\u0026#39;, str_detect(name, \u0026#39;Iran\u0026#39;) ~ \u0026#39;Iran\u0026#39;, str_detect(name, \u0026#39;Czechia\u0026#39;) ~ \u0026#39;Czech Rep.\u0026#39;, str_detect(name, \u0026#39;United States of America\u0026#39;) ~ \u0026#39;United States\u0026#39;, T~name )) %\u0026gt;% left_join(country_centroids) layout_centroid \u0026lt;- node_centroids %\u0026gt;% select(-name) Finally, we’ll use ggraph to make the final plot. We use a layered approach and add some geom_sf’s to input the background world map.\n# start with a ggraph ggraph(UK_neighborhood_1, layout = layout_centroid)+ geom_sf(data = bound_box, col = \u0026quot;grey20\u0026quot;, fill = \u0026quot;transparent\u0026quot;) + geom_sf(data = countries, ## add the geom_sf to map aes(fill = sovereignt), color = \u0026#39;grey\u0026#39;, lwd = 0.3, show.legend = F)+ geom_edge_arc(arrow = arrow(type = \u0026#39;closed\u0026#39;, # add geom_edge for edges length = unit(1, \u0026#39;mm\u0026#39;)), width = .75, color = \u0026#39;black\u0026#39;, end_cap = circle(1.25, \u0026#39;mm\u0026#39;), alpha = .75, strength = .15)+ post_theme(legend.position = \u0026#39;bottom\u0026#39;, legend.background = element_rect(fill = \u0026#39;grey95\u0026#39;, color = \u0026#39;black\u0026#39;))+ scale_fill_viridis_d(direction = -1)+ theme(plot.title = element_text(size = 24, face = \u0026#39;bold\u0026#39;), axis.text = element_blank())+ labs(title = \u0026#39;Apples for apples\u0026#39;, subtitle = \u0026#39;UK first degree network\u0026#39;, caption = \u0026#39;Projected with the Equal Earth map projection \u0026#39;) ","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577836800,"objectID":"904ac0ce1ccf714d0aa0e68661b9c0fc","permalink":"/post/apples-for-apples/quick-start-network-analysis/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/post/apples-for-apples/quick-start-network-analysis/","section":"post","summary":"Introduction  This is the initial Deltanomics blog post. So, in this post, I’ll cover a few different approaches to analysis and data visualisation rather quickly that provides a good overview of the types of things covered in this blog.\nLet’s start with loading the packages we’ll use. Also, let’s create a ggplot theme that allows us to easily make changes when we want.\n## Libraries used in analysis library(tidyverse) library(magrittr) library(scales) library(RColorBrewer) library(janitor) library(ggraph) library(tidygraph) library(graphlayouts) library(flextable) ## a congruent theme throughout for plots post_theme \u0026lt;- function(.","tags":["ggraph","tidygraph"],"title":"Apples for apples I","type":"post"},{"authors":["Marianna Markantoni, PhD","Artur Adam Steiner, PhD","Elliot Meador PhD"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including [code and math](https://sourcethemes.com/academic/docs/writing-markdown-latex/). -- ","date":1564617600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1564617600,"objectID":"6c5835d02b4a7645c22a7b880d9c8f27","permalink":"/publication/community-resilience-2019/index/","publishdate":"2019-08-01T00:00:00Z","relpermalink":"/publication/community-resilience-2019/index/","section":"publication","summary":"Quantitative study of rural community resilience in southwest Scotland.","tags":["Source Themes"],"title":"Can community interventions change resilience? Fostering perceptions of individual and community resilience in rural places","type":"publication"},{"authors":["Elliot Meador PhD","David O'Brien"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including [code and math](https://sourcethemes.com/academic/docs/writing-markdown-latex/). -- ","date":1564617600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1564617600,"objectID":"e97bc220bb71e7c77a88a4c3ffcfe55a","permalink":"/publication/food-security-rwanda/index/","publishdate":"2019-08-01T00:00:00Z","relpermalink":"/publication/food-security-rwanda/index/","section":"publication","summary":"Trust in one's cooperative leadership is most important in predicting the likelihood that someone recommends their coopertive to their neighbourhood.","tags":["Source Themes"],"title":"Placing Rwanda’s agriculture boom: trust, women empowerment and policy impact in maize agricultural cooperatives","type":"publication"},{"authors":["Elliot Meador PhD"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including [code and math](https://sourcethemes.com/academic/docs/writing-markdown-latex/). -- ","date":1564617600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1564617600,"objectID":"e8c252376302d7f5ce7c3df3ba6c8af8","permalink":"/publication/reaching-rural/","publishdate":"2019-08-01T00:00:00Z","relpermalink":"/publication/reaching-rural/","section":"publication","summary":"Social network analysis of inter-connected board members in Missouri suggests that networks do not purmeate into rural areas of the state.","tags":["Source Themes"],"title":"Reaching rural: Identifying implicit social networks in community development programmes","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Academic Academic | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"f40150aeb56bb9e479dd7519951a1a85","permalink":"/project/project-tgrains/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/project-tgrains/","section":"project","summary":"This project seeks to build briding social capital in the UK food system.","tags":["Demo"],"title":"Transforming and Growing Relationships within regionAl food systems for Improved Nutrition and Sustainability","type":"project"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"a2485c3fae10d71ccc59efcff1e3dc46","permalink":"/links/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/links/","section":"links","summary":"Browsing RBloggers is a great way to learn datascience with R. Find it at https://www.r-bloggers.com.","tags":null,"title":"","type":"links"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"ce289b0fc7731b36956efe8474810a5f","permalink":"/post/d1/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/post/d1/","section":"post","summary":"","tags":null,"title":"","type":"post"}]